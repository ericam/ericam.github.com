<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>http://andmeyer.com/feed.atom</id>
  <updated>2012-08-14T00:00:00Z</updated>
  <link href="http://andmeyer.com/" />
  <link href="http://andmeyer.com/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="http://andmeyer.com/feed.atom">
    <title type="text">Susy 1.0 Release</title>
    <id>http://andmeyer.com/2012/08/14/susy-1-0</id>
    <updated>2012-08-14T00:00:00Z</updated>
    <link href="http://andmeyer.com/2012/08/14/susy-1-0" />
    <author>
      <name>Eric Meyer</name>
    </author>
    <content type="html">&lt;p&gt;Susy 1.0 has officially&amp;nbsp;launched!&lt;/p&gt;
&lt;p&gt;Thanks to everyone who contributed,
including
&lt;a class="reference external" href="https://github.com/dannyprose"&gt;Danny Palmer&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/silvenon"&gt;Matija MarohniÄ‡&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/danielbayerlein"&gt;Daniel Bayerlein&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/jina"&gt;Jina Bolton&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/tbredin"&gt;Thomas bredin-Grey&lt;/a&gt;,
and &lt;a class="reference external" href="https://github.com/Snugug"&gt;Sam Richard&lt;/a&gt;.
Thanks also to the &lt;a class="reference external" href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; and &lt;a class="reference external" href="http://compass-style.org/"&gt;Compass&lt;/a&gt; teams
for building the tools that make it&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;This release is loaded with new features,
but don&amp;#8217;t let that fool you.
Susy has become shockingly simple to use.
See the &lt;a class="reference external" href="http://susy.oddbird.net/"&gt;website&lt;/a&gt; for more details and&amp;nbsp;demonstrations.&lt;/p&gt;
&lt;p&gt;The interface and syntax have been simplified
so that the language is consistent and easy to understand.
We cleaned up the output,
taking into account Compass browser-support settings,
and giving you more control over exactly how your grids are built.
Then we added a load of responsive tools
and optional new settings
to make Susy as absolutely flexible as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;Happy&amp;nbsp;coding!&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://andmeyer.com/feed.atom">
    <title type="text">Create a striped css background using Sass</title>
    <id>http://andmeyer.com/2012/07/20/sass-striped-background</id>
    <updated>2012-07-20T00:00:00Z</updated>
    <link href="http://andmeyer.com/2012/07/20/sass-striped-background" />
    <author>
      <name>Eric Meyer</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/jina/status/225811628338323458"&gt;Jina&lt;/a&gt; asked twitter for Sass advice the other day.
She was working on a &lt;a class="reference external" href="https://gist.github.com/3140730"&gt;bit of code&lt;/a&gt; to create
a rainbow-striped background gradient
using any set of arbitrary&amp;nbsp;colors.&lt;/p&gt;
&lt;p&gt;This is my solution,
in the form of a Sass function.
This requires &lt;a class="reference external" href="http://rubygems.org/gems/sass"&gt;Sass 3.2&lt;/a&gt;
(currently in alpha)
in order to&amp;nbsp;run.&lt;/p&gt;
&lt;div class="section" id="variables"&gt;
&lt;h2&gt;Variables&lt;/h2&gt;
&lt;pre class="code scss literal-block"&gt;
&lt;span class="nv"&gt;$rainbow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;red&lt;/span&gt; &lt;span class="ni"&gt;orange&lt;/span&gt; &lt;span class="nb"&gt;yellow&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt; &lt;span class="nb"&gt;blue&lt;/span&gt; &lt;span class="ni"&gt;indigo&lt;/span&gt; &lt;span class="ni"&gt;violet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;You could set individual variables for each color as well.
You would still pass them all as a single argument,
or join them into a single variable before passing, as you see&amp;nbsp;fit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="function"&gt;
&lt;h2&gt;Function&lt;/h2&gt;
&lt;pre class="code scss literal-block"&gt;
&lt;span class="c1"&gt;// Returns a striped gradient for use anywhere gradients are accepted.
// - $position: the starting position or angle of the gradient.
// - $colors: a list of all the colors to be used.
&lt;/span&gt;&lt;span class="k"&gt;&amp;#64;function&lt;/span&gt; &lt;span class="nt"&gt;stripes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;type-of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s2"&gt;list'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nv"&gt;$gradient&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nv"&gt;$width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;&amp;#64;for&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="ow"&gt;from&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;through&lt;/span&gt; &lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$pop&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;nth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$new&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$pop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$pop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$gradient&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$gradient&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$new&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comma&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;&amp;#64;return&lt;/span&gt; &lt;span class="nt"&gt;linear-gradient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;gradient&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="use"&gt;
&lt;h2&gt;Use&lt;/h2&gt;
&lt;pre class="code scss literal-block"&gt;
&lt;span class="nc"&gt;.rainbow&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;&amp;#64;include&lt;/span&gt;&lt;span class="nd"&gt; background-image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;stripes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;left&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$rainbow&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="demo"&gt;
&lt;h2&gt;Demo&lt;/h2&gt;
&lt;p&gt;Here is the&amp;nbsp;result:&lt;/p&gt;
&lt;div class="demo-rainbow"&gt;&lt;/div&gt;&lt;p&gt;Jina has also posted a demo and explanation
on &lt;a class="reference external" href="http://codepen.io/jina/pen/iosjp"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(The real lesson here
is that all the colors of the rainbow
are acceptable &lt;span class="caps"&gt;CSS&lt;/span&gt; color keywords.
Go forth and queer the&amp;nbsp;web.)&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>

