{"version":3,"sources":["screen.css","../bower_components/accoutrement-reset/sass/_reset.scss","../bower_components/accoutrement-fonts/sass/_fonts.scss","../bower_components/accoutrement-scale/sass/_scale.scss","base/_base.scss","base/_type.scss","../bower_components/accoutrement-queries/sass/_queries.scss","../bower_components/accoutrement-pseudo/sass/_pseudo-elements.scss","../bower_components/accoutrement-layout/sass/_layout.scss","layout/_page.scss","layout/_banner.scss","layout/_navigation.scss","layout/_main.scss","layout/_pagination.scss","layout/_contentinfo.scss","modules/_posts.scss","../bower_components/accoutrement-color/sass/_color.scss","modules/_bio.scss","modules/_calendar.scss","modules/_list-pages.scss","modules/_inline-demos.scss","modules/_pygments.scss"],"names":[],"mappings":"AAAA,kBAAiB;AACjB;;;;;;;;;;;;;;;;;;;;;;ICQqe;ADere;ECpBW,WAAA;EACD,YAAA;EAkBF,WAAA;EACN,eAAW;EACX,iBAAgB;EDKhB,0BAAyB,EAAE;;AAE7B;EACE,gBAAe,EAAE;;AAEnB;EACE,kBAAiB,EAAE;;AAErB;ECGE,2BAAgB;EDDhB,mBAAkB,EAAE;;AAEtB;ECME,kBAAa;EACb,qBAAgB;EDJhB,wBAAuB,EAAE;;AAE3B;ECOC,cAA+C,EAAA;EDL9C;ICSW,aAAA;IDPT,eAAc,EAAE;;AAEpB;EACE,cAAa,EAAE;;AAEjB;EACE,gBAAe,EAAE;;AAEnB;EACE,4JAA2J,EAAE;;AAE/J;EACE,+BAA8B;;;;EAI9B,kHAAiH,EAAE;;AAErH;EACE,+EAA8E,EAAE;;AAElF;EE9CI,gCAAY;EACC,oBAAA;EFgDf,qBAAoB;;EAEpB,kIAAiI,EAAE;;AAErI;EErDgB,gCAAA;EACZ,oBAAa;EFuDf,qBAAoB;;EAEpB,gIAA+H,EAAE;;AAEnI;EE5DgB,gCAAA;EACC,oBAAA;EF8Df,mBAAkB;;EAElB,4HAA2H,EAAE;;AAE/H;EACE,gFAA+E,EAAE;;AAEnF;EEtEI,mCAAY;EACZ,oBAAa;EFwEf,qBAAoB;;EAEpB,oIAAmI,EAAE;;AAEvI;EE7EgB,mCAAA;EACZ,oBAAa;EF+Ef,qBAAoB;;EAEpB,kIAAiI,EAAE;;AAErI;EEpFI,mCAAY;EACZ,oBAAa;EFsFf,mBAAkB;;EAElB,8HAA6H,EAAE;;AAEjI;EE3FI,mCAAY;EACZ,oBAAa;EF6Ff,mBAAkB;;EAElB,0IAAyI,EAAE;;AAE7I;EACE,mFAAkF,EAAE;;AAEtF;EACE,wBAAuB,EAAE;;AAE3B;EG5BE,oBAAa;ECtFb,uBAAA;EACO,kBAAA;EACM,cAAA;EJqHb,2BAA0B,EAAE;;AAE9B;EIlHmB,6BAAA;EACO,wBAAA;EJoHxB,kDAAyC;EAAzC,0CAAyC,EAAE;;AAE7C;EKpIqB,gBAAA;EAGF,uBAAA,EAAA;ALoInB;EKlII,gBAAiB;ELoInB,4BAA2B,EAAE;;AAE/B;EKtHE,wBAAO;ELwHP,aAAY,EAAE;;AAEhB;EGvEE,uBAAa;EGNX,yBAAA,EAAA;ENgFF;IACE;MG3EF,uBAAa;MEpCA,yBAAA,EAAA,EAAA;ELkHb;IK9G0B,gBAAA,EAAA;ELgH1B;IACE,gBAAe,EAAE;;AAErB;EGnFE,sBAAa;EExBb,wBAAe;ECkBb,0BAAA,EAAA;EN6FF;IACE;MGxFW,uBAAA;MH0FT,yBAAwB,EAAE,EAAE;;AAElC;EMlGI,0BAAA,EAAA;ENoGF;IACE;MG/FW,sBAAA;MHiGT,wBAAuB,EAAE,EAAE;;AAEjC;EACE,mBAAkB,EAAE;;AAEtB;EACE,oBAAmB,EAAE;;AAEvB;EACE,0BAAyB,EAAE;;AAE7B;EACE,eAAc,EAAE;;AAElB;EACE,uBAAsB,EAAE;;AAE1B;EACE,0BAAyB,EAAE;;AAE7B;EKxFE,oCAAS;EAAX,sBAAW,EAAA;EL2FT;IACE,oBAAmB,EAAE;;AAEzB;EMjII,wBAAA,EAAA;ENmIF;IACE;MKpFoB,gBAA8B,EAAA;MLsFhD;QGhIJ,uBAAa;QE+CT,wBAAe;QACf,2BAAa;QLoFX,wBAAuB,EAAE,EAAE;;AAEnC;EGtIe,uBAAA;EEyDJ,wBAAA;EACT,gBAAY;EEpId,oBAAsB,EAAA;EPqNpB;IKjFiB,cAAA,EAAA;ELmFjB;IACE,oBAAmB,EAAE;;AAEzB;EKzE0B,0BAAS,EAAA;EL2EjC;IKrEW,gBAAA;IACO,0BAAA;IACb,qBAAA,EAAA;ELuEL;IKnEE,WAAc;IACd,qBAAU;IAAd,oBAAc,EAAA;ILsEV;MQ3KuB,oBAEP;MACG,QAAA;MACF,WAAA;MACC,SAAA;MHoGR,UAAA;MACR,cAAO;MLwEP,aAAY,EAAE;;AAEpB;EGnKe,uBAAA;EEiGD,wBAAA;EACZ,sCAAmB;EACnB,wBAAY;EACZ,wBAAS;EAAX,qBAAU,EAAA;ELsER;IKjEc,8BAAA;IACE,oBAAA;ILmEd,oBAAmB,EAAE;;AAEzB;EG/KE,uBAAa;EHiLb,wBAAuB,EAAE;;AAE3B;EKvDE,uCAAS;ELyDT,uBAAsB,EAAE;;AAE1B;EKtDE,gCAAe;EACf,0BAAS;ELwDT,qBAAoB,EAAE;;AAExB;ESxQI,kBAAO;EACP,+BAAS;EACT,gBAAY;EACZ,wBAAY;ET0Qd,oBAAmB,EAAE;;AAEvB;EStQE,gBAAW;EACX,kBAAS;ETwQT,sBAAqB,EAAE;;AAEzB;EUrRE,yBAAY;EACI,oBAAA;EAAF,2BAAA,EAAA;EVwRd;IG5Ma,iBAAA;IOxEX,wBAAS;IAI4B,uBAAA,EAAA;EVoRvC;IUjRc,uBAAA,EAAA;EVmRd;IGlNa,uBAAA;IO5DX,wBAAA;IACA,aAAY;IHfhB,oBAAwB,EAAA;IPiSpB;MACE,gBAAe,EAAE;;AAEvB;EG1NE,uBAAa;EQzEb,wBAAgB;EAChB,4BAAY;EAGmC,oBAAA,EAAA;EXoS/C;IWlSI,gBAAS;IACT,uBAAS;IJRW,uBAAsC,EAAA;IP6S5D;MWlSI,cAAS;MACT,uBAAO;MAIgE,aAAA,EAAA;EXiS7E;IOjTuD,gBAA2C,EAAA;IPmThG;MW7RsB,cAAA,EAAA;EX+RxB;IOrTqC,gBAAA,EAAA;IPuTnC;MWjSuB,cAAA,EAAA;EXmSzB;IOzTI,gBAAmC,EAAA;IP2TrC;MWrSsB,cAAA,EAAA;EXuSxB;IO7TG,gBAAkC,EAAA;IP+TnC;MWzSwB,cAAA,EAAA;EX2S1B;IOjUyB,gBAAgB,EAAA;IPmUvC;MACE,cAAa,EAAE;;AAErB;EACE;IWjSE,aAAS;IACT,uBAAY;IACZ,kBAAO;IAGa,YAA4E,EAAA;IXiShG;MW7RJ,qBAAA,EAAA;EX+RE;IW3Rc,cAAA;IX6RZ,mBAAkB,EAAE,EAAE;;AAE1B;EYrVgB,2BAAA;EACd,qBAAO;EACP,aAAe;EACf,oBAAoB;EAAZ,uBAAA,EAAA;EZwVR;IYpVU,6CAAA;IACI,WAAA;IZsVZ,gCAA+B,EAAE;;AAErC;EahWc,oBAAA;EAAd,oBAAY,EAAA;EbmWV;IOvU4B,eAAqB,EAAA;IPyU/C;MahW0B,gBAAA,EAAA;EbkW5B;Ia7VE,uBAAY;IACI,oBAAA;IACR,wBAAA,EAAA;Eb+VV;IG9RA,uBAAa;IU7DH,yBAAA,EAAA;Eb8VV;IGjSA,uBAAa;IUzDF,yBAAA;INjBI,mBAAA,EAAA;EP+Wf;IOnWe,eAAA,EAAA;EPqWf;IavVU,eAAA,EAAA;EbyVV;IACE,aAAY,EAAE;;AAElB;EG5SE,uBAAa;EW5Eb,wBAAO;EACP,aAAA;EACoB,aAAA;EACpB,sBAAgB;Ed2XhB,2BAA0B,EAAE;;AAE9B;EGpTe,uBAAA;EWpED,yBAAA;EAAd,oBAAQ,EAAA;Ed4XN;IcxXE,uBAAQ;Id0XR,sBAAqB,EAAE;;AAE3B;EctXE,gBAAW;EACF,kBAAA;EdwXT,sBAAqB,EAAE;;AAEzB;Ee9YA,2BAAkB,EAAA;EfgZhB;IACE,eAAc,EAAE;;AAEpB;EGtUE,uBAAa;EanDL,wBDjBR;EACA,aAAY;Ef6YZ,oBAAmB,EAAE;;AAEvB;Ee1YE,uBAAW;EAAX,sBAAW;EAAX,eAAW;EAAb,yBAAc;EAAd,qBAAc;EAAd,iBAAc,EAAA;Ef6YZ;IezYW,aAAA;IACC,0BAAA,EAAA;Ef2YZ;IevYwB,uBAAA;IAAA,mBAAA;IAAA,eAAA;IACZ,uBAAA,EAAA;EfyYZ;IerYY,uBAAA;IAAA,mBAAA;IAAA,eAAA,EAAA;EfuYZ;IepYF,kBAAoB,EAAA;IfsYhB;MACE,sBAAqB,EAAE;;AAE7B;EO1ZA,oBAAS,EAAA;EP4ZP;IACE,cAAa,EAAE;;AAEnB;EACE,aAAY,EAAE;;AAEhB;EACE;IiBjbE,aAAc;IACP,yBAAA;IAAC,YAAA,EAAA;IjBobR;MiBhbE,wBAAc;MjBkbd,mBAAkB,EAAE,EAAE;;AAE5B;EQ3bA,0BAAa,EAAA;ER6bX;IQ1bE,aAAS;IACT,cAAS;IR4bT,gBAAe,EAAE;;AAErB;EACE,2BAA0B,EAAE;;AAE9B;EGvXE,uBAAa;EelEb,wBAAY;EZ4DV,oBAAA,EAAA;ENiYF;IACE;MkB1bO,mBAAA;MACQ,aAAA;MAlBP,2BAmBR;MlB4bE,mBAAkB,EAAE,EAAE;;AAE5B;EACE;IACE,0BAAyB,EAAE,EAAE;;AAEjC;EACE,kBAAiB,EAAE;;AAErB;EGzYE,uBAAa;Ee3Cb,wBAAe;ElBubf,kBAAiB,EAAE;;AAErB;EG9YE,uBAAa;EepCb,yBAAO;EACK,gBAAA;EACI,oBAAA;EXxClB,2BAAW,EAAA;EP8dT;IACE,gBAAe,EAAE;;AAErB;EkBpbc,cAAA;ElBsbZ,oBAAmB,EAAE;;AAEvB;EACE,WAAU,EAAE;;AAEd;EACE,uBAAsB,EAAE;;AAE1B;EmBrec,uBAAG,EAAA;EnBuef;ImBnee,gBAAA,EAAA;EnBqef;IACE,uBAAsB,EAAE;;AAE5B;EmB1dE,uBAAS;EAAX,gBAAU,EAAA;EnB6dR;IOzeQ,iBAAE,EAAA;IP2eR;MmB3dmB,eAAA,EAAA;InB6dnB;MACE,eAAc,EAAE;;AAEtB;EoB3eE,iRAAQ;EACR,oBAAe;EpB6ef,0BAAyB,EAAE;;AAE7B;EACE,gBAAe,EAAE;;AqBpgBnB,cAAA;ArBugBA;EACE,gBAAe,EAAE;;AqBvgBnB,YAAA;ArB0gBA;EACE,aAAY,EAAE;;AqB1gBhB,cAAA;ArB6gBA;EACE,cAAa,EAAE;;AqB7gBjB,cAAA;ArBghBA;EACE,aAAY,EAAE;;AqBhhBhB,cAAA;ArBmhBA;EACE,aAAY,EAAE;;AqBnhBhB,WAAA;ArBshBA;EACE,cAAa,EAAE;;AqBthBjB,eAAA;ArByhBA;EACE,gBAAe,EAAE;;AqBzhBnB,YAAA;ArB4hBA;EACE,cAAa,EAAE;;AqB5hBjB,kBAAA;ArB+hBA;EACE,gBAAe,EAAE;;AqB/hBnB,wBAAA;ArBkiBA;EACE,cAAa,EAAE;;AqBliBjB,sBAAA;ArBqiBA;EACE,gBAAe,EAAE;;AqBriBnB,qBAAA;ArBwiBA;EACE,cAAa,EAAE;;AqBxiBjB,sBAAA;ArB2iBA;EACE,gBAAe,EAAE;;AqB3iBnB,sBAAA;ArB8iBA;EqB9iB2B,gBAAY;ErBgjBrC,oBAAmB,EAAE;;AqB/iBvB,mBAAA;ArBkjBA;EACE,gBAAe,EAAE;;AqBljBnB,oBAAA;ArBqjBA;EACE,gBAAe,EAAE;;AqBrjBnB,sBAAA;ArBwjBA;EACE,cAAa,EAAE;;AqBxjBjB,uBAAA;ArB2jBA;EACE,gBAAe,EAAE;;AqB3jBnB,qBAAA;ArB8jBA;EACE,gBAAe,EAAE;;AqB9jBnB,qBAAA;ArBikBA;EqBjkB2B,gBAAa;ErBmkBtC,mBAAkB,EAAE;;AqBlkBtB,qBAAA;ArBqkBA;EACE,gBAAe,EAAE;;AqBrkBnB,yBAAA;ArBwkBA;EACE,gBAAe,EAAE;;AqBxkBnB,wBAAA;ArB2kBA;EACE,gBAAe,EAAE;;AqB3kBnB,uBAAA;ArB8kBA;EACE,gBAAe,EAAE;;AqB9kBnB,0BAAA;ArBilBA;EACE,cAAa,EAAE;;AqBjlBjB,wBAAA;ArBolBA;EACE,cAAa,EAAE;;AqBplBjB,qBAAA;ArBulBA;EACE,gBAAe,EAAE;;AqBvlBnB,uBAAA;ArB0lBA;EACE,gBAAe,EAAE;;AqB1lBnB,mBAAA;ArB6lBA;EACE,gBAAe,EAAE;;AqB7lBnB,mBAAA;ArBgmBA;EACE,gBAAe,EAAE;;AqBhmBnB,qBAAA;ArBmmBA;EACE,gBAAe,EAAE;;AqBnmBnB,qBAAA;ArBsmBA;EACE,gBAAe,EAAE;;AqBtmBnB,qBAAA;ArBymBA;EACE,gBAAe,EAAE;;AqBzmBnB,mBAAA;ArB4mBA;EACE,gBAAe,EAAE;;AqB5mBnB,iBAAA;ArB+mBA;EACE,gBAAe,EAAE;;AqB/mBnB,oBAAA;ArBknBA;EACE,gBAAe,EAAE;;AqBlnBnB,qBAAA;ArBqnBA;EACE,gBAAe,EAAE;;AqBrnBnB,kBAAA;ArBwnBA;EACE,gBAAe,EAAE;;AqBxnBnB,qBAAA;ArB2nBA;EACE,gBAAe,EAAE;;AqB3nBnB,oBAAA;ArB8nBA;EACE,gBAAe,EAAE;;AqB9nBnB,iBAAA;ArBioBA;EACE,gBAAe,EAAE;;AqBjoBnB,qBAAA;ArBooBA;EACE,gBAAe,EAAE;;AqBpoBnB,iBAAA;ArBuoBA;EACE,gBAAe,EAAE;;AqBvoBnB,oBAAA;ArB0oBA;EACE,gBAAe,EAAE;;AqB1oBnB,eAAA;ArB6oBA;EACE,gBAAe,EAAE;;AqB7oBnB,oBAAA;ArBgpBA;EACE,cAAa,EAAE;;AqBhpBjB,oBAAA;ArBmpBA;EACE,gBAAe,EAAE;;AqBnpBnB,sBAAA;ArBspBA;EACE,gBAAe,EAAE;;AqBtpBnB,2BAAA;ArBypBA;EACE,gBAAe,EAAE;;AqBzpBnB,yBAAA;ArB4pBA;EACE,gBAAe,EAAE;;AqB5pBnB,6BAAA;ArB+pBA;EACE,gBAAe,EAAE;;AqB/pBnB,yBAAA;ArBkqBA;EACE,gBAAe,EAAE;;AqBlqBnB,8BAAA;ArBqqBA;EACE,gBAAe,EAAE;;AqBrqBnB,0BAAA;ArBwqBA;EACE,gBAAe,EAAE;;AqBxqBnB,yBAAA;ArB2qBA;EACE,gBAAe,EAAE;;AqB3qBnB,4BAAA;ArB8qBA;EACE,gBAAe,EAAE;;AqB9qBnB,4BAAA;ArBirBA;EACE,gBAAe,EAAE;;AqBjrBnB,6BAAA;ArBorBA;EACE,gBAAe,EAAE;;AqBprBnB,8BAAA;ArBurBA;EACE,gBAAe,EAAE;;AqBvrBnB,2BAAA;ArB0rBA;EACE,gBAAe,EAAE;;AqB1rBnB,2BAAA;ArB6rBA;EACE,gBAAe,EAAE;;AqB7rBnB,4BAAA;ArBgsBA;EACE,gBAAe,EAAE;;AqBhsBnB,4BAAA;ArBmsBA;EACE,gBAAe,EAAE;;AqBnsBnB,0BAAA;ArBssBA;EACE,gBAAe,EAAE;;AqBtsBnB,0BAAA;ArBysBA;EACE,gBAAe,EAAE;;AqBzsBnB,2BAAA;ArB4sBA;EACE,gBAAe,EAAE;;AqB5sBnB,6BAAA;ArB+sBA;EACE,gBAAe,EAAE;;AAEnB,kCAAiC","file":"screen.css","sourcesContent":["@charset \"UTF-8\";\n/*!\n * Web Fonts from fontspring.com\n *\n * All OpenType features and all extended glyphs have been removed.\n * Fully installable fonts can be purchased at http://www.fontspring.com\n *\n * The fonts included in this stylesheet are subject to the End User License you purchased\n * from Fontspring. The fonts are protected under domestic and international trademark and\n * copyright law. You are prohibited from modifying, reverse engineering, duplicating, or\n * distributing this font software.\n *\n * (c) 2010-2015 Fontspring\n *\n *\n *\n *\n * The fonts included are copyrighted by the vendor listed below.\n *\n * Vendor:      FontSite Inc.\n * License URL: http://www.fontspring.com/licenses/fontsite/webfont\n *\n *\n */\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline; }\n\nhtml {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ncaption, th, td {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle; }\n\nq, blockquote {\n  quotes: none; }\n  q:before, q:after, blockquote:before, blockquote:after {\n    content: \"\";\n    content: none; }\n\na img {\n  border: none; }\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block; }\n\ntt, code, pre {\n  font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; }\n\n@font-face {\n  font-family: 'BaskervilleAmp';\n  \n  \n  \n  src: url('../fonts/Baskerville-amp.woff') format('woff'), url('../fonts/Baskerville-amp.ttf') format('truetype'); }\n\n.amp, .post:after {\n  font-family: 'BaskervilleAmp', Baskerville, Palatino, Cambria, Georgia, serif; }\n\n@font-face {\n  font-family: 'CenturyOldStyle';\n  font-style: normal;\n  font-weight: normal;\n  \n  src: url('../fonts/CenturyOldStyle-regular.woff') format('woff'), url('../fonts/CenturyOldStyle-regular.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'CenturyOldStyle';\n  font-style: italic;\n  font-weight: normal;\n  \n  src: url('../fonts/CenturyOldStyle-italic.woff') format('woff'), url('../fonts/CenturyOldStyle-italic.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'CenturyOldStyle';\n  font-style: normal;\n  font-weight: bold;\n  \n  src: url('../fonts/CenturyOldStyle-bold.woff') format('woff'), url('../fonts/CenturyOldStyle-bold.ttf') format('truetype'); }\n\nhtml, figcaption:before {\n  font-family: 'CenturyOldStyle', Baskerville, Palatino, Cambria, Georgia, serif; }\n\n@font-face {\n  font-family: 'FranklinGothicCond';\n  font-style: normal;\n  font-weight: normal;\n  \n  src: url('../fonts/FranklinGothicCd-regular.woff') format('woff'), url('../fonts/FranklinGothicCd-regular.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'FranklinGothicCond';\n  font-style: italic;\n  font-weight: normal;\n  \n  src: url('../fonts/FranklinGothicCd-italic.woff') format('woff'), url('../fonts/FranklinGothicCd-italic.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'FranklinGothicCond';\n  font-style: normal;\n  font-weight: bold;\n  \n  src: url('../fonts/FranklinGothicCd-bold.woff') format('woff'), url('../fonts/FranklinGothicCd-bold.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'FranklinGothicCond';\n  font-style: italic;\n  font-weight: bold;\n  \n  src: url('../fonts/FranklinGothicCd-bolditalic.woff') format('woff'), url('../fonts/FranklinGothicCd-bolditalic.ttf') format('truetype'); }\n\nfigcaption, [role=\"navigation\"], [role=\"contentinfo\"], .p-category {\n  font-family: 'FranklinGothicCond', 'Helvetica Neue', Helvetica, Arial, sans-serif; }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 131.25%;\n  line-height: 1.2381em;\n  background: #fff;\n  color: black;\n  text-shadow: 0 1px 0 #fff; }\n\nbody {\n  background: no-repeat fixed;\n  background-size: cover;\n  font-variant-ligatures: common-ligatures; }\n\na:link, a:visited {\n  color: #ff0080;\n  text-decoration: none; }\na:hover, a:focus, a:active {\n  color: #0086b3;\n  text-decoration: underline; }\n\nimg {\n  vertical-align: bottom;\n  width: 100%; }\n\nh1 {\n  font-size: 1.57143rem;\n  line-height: 1.85714rem; }\n  @media (min-width: 47.25em) {\n    h1 {\n      font-size: 1.95238rem;\n      line-height: 2.47619rem; } }\n  h1 a:link, h1 a:visited {\n    color: #b30059; }\n  h1 a:hover, h1 a:focus, h1 a:active {\n    color: #0086b3; }\n\nh2 {\n  font-size: 1.2381rem;\n  line-height: 1.2381rem;\n  margin-bottom: 1.2381rem; }\n  @media (min-width: 47.25em) {\n    h2 {\n      font-size: 1.57143rem;\n      line-height: 1.85714rem; } }\n\nh3 {\n  margin-bottom: 1.2381rem; }\n  @media (min-width: 47.25em) {\n    h3 {\n      font-size: 1.2381rem;\n      line-height: 1.2381rem; } }\n\nh4, strong {\n  font-weight: bold; }\n\nh5, h6, em, blockquote {\n  font-style: italic; }\n\np, ul, ol, pre, blockquote {\n  margin-bottom: 1.2381rem; }\n\np:empty {\n  display: none; }\n\nul {\n  list-style-type: disc; }\n\nol {\n  list-style-type: decimal; }\n\nblockquote {\n  border-left: 0.61905rem solid gray;\n  padding: 0 1.2381rem; }\n  blockquote em {\n    font-style: normal; }\n\nul, ol, blockquote {\n  margin-left: 1.2381rem; }\n  @media (min-width: 37.95238em) {\n    ul, ol, blockquote {\n      margin-left: 0; }\n      ul ul, ul ol, ol ul, ol ol, blockquote ul, blockquote ol {\n        font-size: 0.80952rem;\n        line-height: 1.2381rem;\n        margin-bottom: 0.61905rem;\n        margin-left: 1.2381rem; } }\n\ncite, .citation {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  display: block;\n  font-style: normal; }\n  cite:before, .citation:before {\n    content: '—'; }\n  cite em, .citation em {\n    font-style: italic; }\n\nfigure {\n  margin-bottom: 1.2381rem; }\n  figure > a, figure > img, figure > .video {\n    display: block;\n    outline: 1px solid black;\n    vertical-align: top; }\n  figure .video {\n    height: 0;\n    padding-top: 56.25%;\n    position: relative; }\n    figure .video * {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      height: 100%;\n      width: 100%; }\n\nfigcaption {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  background: rgba(255, 0, 128, 0.125);\n  counter-increment: fig;\n  margin-top: 0.61905rem;\n  padding: 0.61905rem; }\n  figcaption:before {\n    content: 'fig.' counter(fig);\n    font-style: italic;\n    margin-right: .4em; }\n\ntt, code, pre {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem; }\n\ntt, code {\n  background: rgba(255, 255, 255, 0.75);\n  padding: 0 0.30952rem; }\n\npre {\n  border-left: 3px solid #ff0080;\n  margin-left: -0.61905rem;\n  padding: 0.61905rem; }\n\n.post:after {\n  content: '— & —';\n  color: rgba(255, 0, 128, 0.5);\n  display: block;\n  margin-top: 1.95238rem;\n  text-align: center; }\n\n.container {\n  margin: 0 auto;\n  max-width: 36rem;\n  padding: 0 1.2381rem; }\n\n[role=\"banner\"] {\n  padding-top: 0.30952rem;\n  text-align: center;\n  text-transform: lowercase; }\n  [role=\"banner\"] .brand {\n    font-size: 1rem;\n    line-height: 1.2381rem;\n    display: inline-block; }\n  [role=\"banner\"] a:link, [role=\"banner\"] a:visited {\n    display: inline-block; }\n  [role=\"banner\"] .tagline {\n    font-size: 0.80952rem;\n    line-height: 1.2381rem;\n    color: gray;\n    font-style: italic; }\n    [role=\"banner\"] .tagline:before {\n      content: ' / '; }\n\n[role=\"navigation\"] {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  padding-bottom: 0.30952rem;\n  text-align: center; }\n  [role=\"navigation\"] a:link, [role=\"navigation\"] a:visited {\n    color: #b30059;\n    display: inline-block;\n    padding: 0 0.30952rem; }\n    [role=\"navigation\"] a:link:before, [role=\"navigation\"] a:visited:before {\n      content: '+';\n      display: inline-block;\n      width: .5em; }\n  [role=\"navigation\"] a:hover, [role=\"navigation\"] a:focus, [role=\"navigation\"] a:active {\n    color: #0086b3; }\n    [role=\"navigation\"] a:hover:before, [role=\"navigation\"] a:focus:before, [role=\"navigation\"] a:active:before {\n      content: '/'; }\n  .who [role=\"navigation\"] a[href*=\"who\"] {\n    color: #0086b3; }\n    .who [role=\"navigation\"] a[href*=\"who\"]:before {\n      content: '/'; }\n  .what [role=\"navigation\"] a[href*=\"what\"] {\n    color: #0086b3; }\n    .what [role=\"navigation\"] a[href*=\"what\"]:before {\n      content: '/'; }\n  .why [role=\"navigation\"] a[href*=\"why\"] {\n    color: #0086b3; }\n    .why [role=\"navigation\"] a[href*=\"why\"]:before {\n      content: '/'; }\n  .press [role=\"navigation\"] a[href*=\"press\"] {\n    color: #0086b3; }\n    .press [role=\"navigation\"] a[href*=\"press\"]:before {\n      content: '/'; }\n\n@media (min-width: 47.25em) {\n  [role=\"banner\"], [role=\"navigation\"] {\n    float: left;\n    padding: 0 0.30952rem;\n    text-align: left;\n    width: 50%; }\n    [role=\"banner\"] a:link, [role=\"banner\"] a:visited, [role=\"navigation\"] a:link, [role=\"navigation\"] a:visited {\n      padding: 0.61905rem; }\n  [role=\"navigation\"] {\n    float: right;\n    text-align: right; } }\n\n[role=\"main\"] {\n  border: 2px solid #b30059;\n  border-width: 2px 0;\n  clear: both;\n  counter-reset: fig;\n  padding: 1.95238rem 0; }\n  [data-bg] [role=\"main\"] {\n    background-color: rgba(255, 255, 255, 0.98);\n    border: 0;\n    box-shadow: 0 0 .125em #ff0080; }\n\n.pagination {\n  font-style: italic;\n  text-align: center; }\n  .pagination .location {\n    margin: 0 1em; }\n    .pagination .location:before, .pagination .location:after {\n      content: ' • '; }\n  .pagination .now, .pagination .context {\n    display: inline-block;\n    font-style: normal;\n    vertical-align: middle; }\n  .pagination .now {\n    font-size: 5.95238rem;\n    line-height: 6.19048rem; }\n  .pagination .context {\n    font-size: 3.04762rem;\n    line-height: 3.09524rem;\n    padding: 0 .125em; }\n  .pagination .prev:before {\n    content: '« '; }\n  .pagination .next:after {\n    content: ' »'; }\n  .pagination .disabled {\n    color: gray; }\n\n[role=\"contentinfo\"] {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  clear: both;\n  color: gray;\n  padding: 1.2381rem 0;\n  text-transform: uppercase; }\n\n.social {\n  font-size: 0.61905rem;\n  line-height: 0.61905rem;\n  text-align: center; }\n  .social li {\n    display: inline-block;\n    margin: 0 0.30952rem; }\n\n.colophon {\n  margin: 0 auto;\n  max-width: 36rem;\n  padding: 0 1.2381rem; }\n\n.post {\n  margin-bottom: 1.95238rem; }\n  .post:last-of-type:after {\n    display: none; }\n\n.byline {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  color: gray;\n  font-style: italic; }\n\n.gallery-body {\n  display: flex;\n  flex-wrap: wrap; }\n  .gallery-body img {\n    width: 100%;\n    outline: 1px solid black; }\n  .gallery-body .gallery-item {\n    flex: 1 1 48%;\n    margin: 0.30952rem 1%; }\n  .gallery-body .full {\n    flex: 1 1 98%; }\n  .gallery-body .video {\n    padding-top: 27%; }\n    .gallery-body .video.full {\n      padding-top: 55.125%; }\n\n.readmore {\n  font-style: italic; }\n  .readmore:after {\n    content: '»'; }\n\n.section {\n  clear: both; }\n\n@media (min-width: 35em) {\n  .headshot {\n    float: left;\n    margin-right: 1.2381rem;\n    width: 25%; }\n    .headshot ~ p {\n      margin-left: 1.2381rem;\n      padding-left: 25%; } }\n\n.section--cal {\n  margin-bottom: 1.2381rem; }\n  .section--cal:after {\n    clear: both;\n    content: ' ';\n    display: block; }\n\n.h-event {\n  margin-bottom: 0.61905rem; }\n\n.dt-start {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  font-style: italic; }\n  @media (min-width: 47.25em) {\n    .dt-start {\n      text-align: right;\n      float: left;\n      padding-right: 0.61905rem;\n      width: 6.19048rem; } }\n\n@media (min-width: 47.25em) {\n  .event-details {\n    padding-left: 6.80952rem; } }\n\n.p-name {\n  margin-bottom: 0; }\n\n.p-summary, .p-location {\n  font-size: 0.80952rem;\n  line-height: 1.2381rem;\n  margin-bottom: 0; }\n\n.p-category {\n  font-size: 0.61905rem;\n  line-height: 0.61905rem;\n  color: #a6a6a6;\n  font-style: normal;\n  text-transform: uppercase; }\n  .p-category:before {\n    content: ' | '; }\n\n.history-link {\n  float: right;\n  font-style: italic; }\n\n.interview-title {\n  margin: 0; }\n\n.blog-archive, .tag-archive {\n  margin-top: 1.2381rem; }\n\n.blog-archive li {\n  list-style-type: none; }\n  .blog-archive li ul {\n    margin-left: 0; }\n  .blog-archive li li {\n    list-style-type: disc; }\n\n.tag-list {\n  margin-top: 1.2381rem;\n  display: block; }\n  .tag-list li {\n    display: inline; }\n    .tag-list li:after {\n      content: ', '; }\n    .tag-list li:last-child:after {\n      display: none; }\n\n.demo-rainbow {\n  background-image: linear-gradient(to right, red 0%, red 14.28571%, orange 14.28571%, orange 28.57143%, yellow 28.57143%, yellow 42.85714%, green 42.85714%, green 57.14286%, blue 57.14286%, blue 71.42857%, indigo 71.42857%, indigo 85.71429%, violet 85.71429%, violet 100%);\n  height: 4.95238rem;\n  margin-bottom: 1.2381rem; }\n\n.c {\n  color: #a6a6a6; }\n\n/* Comment */\n.err {\n  color: #a6a6a6; }\n\n/* Error */\n.g {\n  color: gray; }\n\n/* Generic */\n.k {\n  color: black; }\n\n/* Keyword */\n.l {\n  color: gray; }\n\n/* Literal */\n.n {\n  color: gray; }\n\n/* Name */\n.o {\n  color: black; }\n\n/* Operator */\n.x {\n  color: #0086b3; }\n\n/* Other */\n.p {\n  color: black; }\n\n/* Punctuation */\n.cm {\n  color: #a6a6a6; }\n\n/* Comment.Multiline */\n.cp {\n  color: black; }\n\n/* Comment.Preproc */\n.c1 {\n  color: #a6a6a6; }\n\n/* Comment.Single */\n.cs {\n  color: black; }\n\n/* Comment.Special */\n.gd {\n  color: #ff0080; }\n\n/* Generic.Deleted */\n.ge {\n  color: #a6a6a6;\n  font-style: italic; }\n\n/* Generic.Emph */\n.gr {\n  color: #0086b3; }\n\n/* Generic.Error */\n.gh {\n  color: #0086b3; }\n\n/* Generic.Heading */\n.gi {\n  color: black; }\n\n/* Generic.Inserted */\n.go {\n  color: #a6a6a6; }\n\n/* Generic.Output */\n.gp {\n  color: #a6a6a6; }\n\n/* Generic.Prompt */\n.gs {\n  color: #a6a6a6;\n  font-weight: bold; }\n\n/* Generic.Strong */\n.gu {\n  color: #0086b3; }\n\n/* Generic.Subheading */\n.gt {\n  color: #a6a6a6; }\n\n/* Generic.Traceback */\n.kc {\n  color: #0086b3; }\n\n/* Keyword.Constant */\n.kd {\n  color: #0086b3; }\n\n/* Keyword.Declaration */\n.kn {\n  color: black; }\n\n/* Keyword.Namespace */\n.kp {\n  color: black; }\n\n/* Keyword.Pseudo */\n.kr {\n  color: #0086b3; }\n\n/* Keyword.Reserved */\n.kt {\n  color: #0086b3; }\n\n/* Keyword.Type */\n.ld {\n  color: #a6a6a6; }\n\n/* Literal.Date */\n.m {\n  color: #ff0080; }\n\n/* Literal.Number */\n.s {\n  color: #ff0080; }\n\n/* Literal.String */\n.na {\n  color: #b30000; }\n\n/* Name.Attribute */\n.nb {\n  color: #0086b3; }\n\n/* Name.Builtin */\n.nc {\n  color: #ff0080; }\n\n/* Name.Class */\n.no {\n  color: #0086b3; }\n\n/* Name.Constant */\n.nd {\n  color: #0086b3; }\n\n/* Name.Decorator */\n.ni {\n  color: #0086b3; }\n\n/* Name.Entity */\n.ne {\n  color: #0086b3; }\n\n/* Name.Exception */\n.nf {\n  color: #0086b3; }\n\n/* Name.Function */\n.nl {\n  color: #a6a6a6; }\n\n/* Name.Label */\n.nn {\n  color: #ff0080; }\n\n/* Name.Namespace */\n.nx {\n  color: #a6a6a6; }\n\n/* Name.Other */\n.py {\n  color: #a6a6a6; }\n\n/* Name.Property */\n.nt {\n  color: #006080; }\n\n/* Name.Tag */\n.nv {\n  color: #006080; }\n\n/* Name.Variable */\n.ow {\n  color: black; }\n\n/* Operator.Word */\n.w {\n  color: #a6a6a6; }\n\n/* Text.Whitespace */\n.mf {\n  color: #ff0080; }\n\n/* Literal.Number.Float */\n.mh {\n  color: #ff0080; }\n\n/* Literal.Number.Hex */\n.mi {\n  color: #ff0080; }\n\n/* Literal.Number.Integer */\n.mo {\n  color: #ff0080; }\n\n/* Literal.Number.Oct */\n.sb {\n  color: #a6a6a6; }\n\n/* Literal.String.Backtick */\n.sc {\n  color: #ff0080; }\n\n/* Literal.String.Char */\n.sd {\n  color: #a6a6a6; }\n\n/* Literal.String.Doc */\n.s2 {\n  color: #ff0080; }\n\n/* Literal.String.Double */\n.se {\n  color: #0086b3; }\n\n/* Literal.String.Escape */\n.sh {\n  color: #a6a6a6; }\n\n/* Literal.String.Heredoc */\n.si {\n  color: #ff0080; }\n\n/* Literal.String.Interpol */\n.sx {\n  color: #ff0080; }\n\n/* Literal.String.Other */\n.sr {\n  color: #0086b3; }\n\n/* Literal.String.Regex */\n.s1 {\n  color: #ff0080; }\n\n/* Literal.String.Single */\n.ss {\n  color: #ff0080; }\n\n/* Literal.String.Symbol */\n.bp {\n  color: #0086b3; }\n\n/* Name.Builtin.Pseudo */\n.vc {\n  color: #0086b3; }\n\n/* Name.Variable.Class */\n.vg {\n  color: #0086b3; }\n\n/* Name.Variable.Global */\n.vi {\n  color: #0086b3; }\n\n/* Name.Variable.Instance */\n.il {\n  color: #ff0080; }\n\n/* Literal.Number.Integer.Long */\n","// Reset the box model measurements.\n// @see `compass/utilities/reset`\n@mixin reset-box-model {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  @include reset-box-model;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\n\n// Unlike Eric Meyer's original reset, we reset the html element to be\n// compatible with the vertical rhythm mixins.\nhtml {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ncaption,\nth,\ntd {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle;\n}\n\nq,\nblockquote {\n  quotes: none;\n\n  &:before, &:after {\n    content: \"\";\n    content: none;\n  }\n}\n\na img {\n   border: none;\n}\n\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n","// Fontface Tools\n// ==============\n\n\n$font-formats: woff ttf !default;\n$font-path: '../fonts/' !default;\n\n\n// Font-URL [function]\n// -------------------\n@function font-url(\n  $path\n) {\n  @return url('#{$font-path}#{$path}');\n}\n\n\n// Font-Face [mixin]\n// -----------------\n@mixin font-face(\n  $font\n) {\n  $font: _parse-font($font);\n\n  @font-face {\n    font-family: map-get($font, font-family);\n    font-style: map-get($font, font-style);\n    font-weight: map-get($font, font-weight);\n\n    // IE9 compat mode (eot)\n    src: map-get($font, eot);\n\n    // IE6-IE8 (eot)\n    // Modern Browsers (woff, woff2)\n    // Safari, Android, iOS (ttf, otf)\n    // Legacy iOS (svg, svgz)\n    src: map-get($font, src);\n  }\n}\n\n\n// Font Family [mixin]\n// -------------------\n@mixin font-family(\n  $font\n) {\n  $_name: map-get($font, name);\n  $_path: map-get($font, path);\n  $_styles: map-get($font, styles);\n  $_files: map-get($font, files);\n\n  @if $_path and $_styles {\n    @each $style in $_styles {\n      $_a: nth($style, 1);\n      $_b: if(length($style) > 1, nth($style, 2), null);\n\n      $_a: if($_a == 'normal', null, $_a);\n      $_b: if($_b == 'normal', null, $_b);\n\n      $_location: interpolate($_path, $_a, $_b);\n\n      $_a: if($_a, to-lower-case($_a), 'normal');\n      $_b: if($_b, to-lower-case($_b), 'normal');\n\n      $_a: if($_a == 'regular', 'normal', $_a);\n      $_b: if($_b == 'regular', 'normal', $_b);\n\n      @include font-face($_name $_location $_a $_b);\n    }\n  } @else if $_files {\n    @each $_style, $_location in $_files {\n      @include font-face(join($_name $_location, $_style));\n    }\n  } @else {\n    @include font-face($_name $_path);\n  }\n}\n\n\n// Fonts [mixin]\n// -------------\n@mixin fonts(\n  $fonts: $fonts\n) {\n  @each $selector, $font in $fonts {\n    $_stack: map-get($font, stack);\n\n    @include font-family($font);\n\n    %#{$selector} {\n      font-family: map-get($font, name), $_stack;\n    }\n  }\n}\n\n\n// Name from path\n// --------------\n@function _name-from-path(\n  $path\n) {\n  @if ($path) and str-index($path, '/') {\n    $_i: str-index($path, '/');\n    $_name: str-slice($path, $_i + 1);\n    @return _name-from-path($_name);\n  } @else {\n    @return $path;\n  }\n}\n\n\n// Parse Font\n// ----------\n@function _parse-font(\n  $font\n) {\n  $_styles: italic oblique;\n  $_weights: 100 200 300 400 500 600 700 800 900 bold;\n  $_type-options: eot woff woff2 ttf otf svg svgz;\n  $_type-names: (\n    ttf: 'truetype',\n    otf: 'opentype',\n    woff: 'woff',\n    woff2: 'woff2',\n    svg: 'svg',\n    svgz: 'svg',\n    eot: 'embedded-opentype',\n  );\n\n  $_name: null;\n  $_path: null;\n  $_style: null;\n  $_weight: null;\n  $_types: ();\n  $_eot: null;\n  $_src: ();\n  $_svg-name: null;\n\n  @each $item in $font {\n    @if $item == normal {\n      $_style: $_style or normal;\n      $_weight: $_weight or normal;\n    } @else if index($_styles, $item) or index($_weights, $item) {\n      $_style: if(index($_styles, $item), $item, $_style);\n      $_weight: if(index($_weights, $item), $item, $_weight);\n    } @else if index($_type-options, $item) {\n      $_types: append($_types, $item);\n    } @else if str-index($item, '#') == 1 {\n      $_svg-name: $item;\n    } @else if $_name or str-index($item, '/') {\n      $_path: $item;\n    } @else {\n      $_name: $item;\n    }\n  }\n\n  @if $_path and not($_name) {\n    $_name: _name-from-path($_path);\n  }\n\n  $_path: $_path or $_name;\n  $_types: if(length($_types) > 0, $_types, $font-formats);\n\n  // SVG Name should come from svg file, if possible.\n  $_svg-name: $_svg-name or '#' + $_name;\n\n  // Ideally, this checks for available files in the specified location\n  // before adding them to the $_eot or $_src lists.\n  @each $type in $_types {\n    $_url: $_path + '.' + $type;\n\n    @if $type == eot {\n      $_eot: font-url($_url);\n      $_url: $_url + '?#iefix';\n    } @else if $type == svg or $type == svgz {\n      $_url: $_url + $_svg-name;\n    }\n\n    $_this: font-url($_url) format(map-get($_type-names, $type));\n    $_src: append($_src, $_this, comma);\n  }\n\n  @return (\n    font-family: quote($_name),\n    font-style: $_style,\n    font-weight: $_weight,\n    eot: $_eot,\n    src: $_src,\n  );\n}\n","// Scales\n// ======\n\n@import 'units';\n@import 'math';\n\n\n// Get Size\n// --------\n@function _get-size(\n  $size\n) {\n  $size: map-get($sizes, $size) or $size;\n\n  @if map-has-key($sizes, $size) {\n    $size: _get-size($size);\n  }\n\n  @return $size;\n}\n\n\n// Get Ratio\n// ---------\n@function _get-ratio(\n  $ratio: $ratio\n) {\n  $ratio: map-get($_ratio-options, $ratio) or $ratio;\n\n  @if map-has-key($_ratio-options, $ratio) {\n    $ratio: _get-ratio($ratio);\n  }\n\n  @return $ratio;\n}\n\n\n// Size\n// ----\n@function size(\n  $size,\n  $unit: $rhythm-unit\n) {\n  $size: _get-size($size);\n\n  @if type-of($size) == number {\n    @if unitless($size) {\n      $_ratio: _get-ratio($ratio);\n      @if $_ratio == 'linear' {\n        $size: $base-size * $size;\n      } @else {\n        $size: round($base-size * pow($_ratio, $size));\n      }\n    }\n\n    $size: convert-length($size, $unit);\n  }\n\n  @return $size;\n}\n\n\n// Get Lines\n// ---------\n@function _get-lines(\n  $size: normal,\n  $rhythm: rhythm\n) {\n  $font-size: size($size, px);\n  $line-height: size($rhythm, px);\n\n  @return ceil(2 * $font-size / $line-height) / 2;\n}\n\n\n// Font Size\n// ---------\n@mixin font-size(\n  $size: normal,\n  $lines: false\n) {\n  font-size: size($size);\n  line-height: if($lines, $lines, _get-lines($size)) * size(rhythm);\n}\n\n\n// Square\n// ------\n@mixin square($size) {\n  $size: size($size);\n\n  height: $size;\n  width: $size;\n}\n\n\n// Establish Baseline\n@mixin baseline(\n  $base-size: $base-size,\n  $ratio: $ratio\n) {\n  font-size: percentage($base-size / $_browser-default-font-size);\n  line-height: size(rhythm, em);\n}\n","// Base\n// ====\n\n@import 'license.config';\n@import 'requirements.config';\n@import 'colors.config';\n@import 'scale.config';\n@import 'fonts.config';\n@import 'breakpoints.config';\n\n@include fonts;\n@include global-box-sizing;\n\nhtml {\n  @extend %body;\n  @include baseline;\n  background: color(background);\n  color: color(text);\n  text-shadow: 0 1px 0 color(background);\n}\n\nbody {\n  background: no-repeat fixed;\n  background-size: cover;\n  font-variant-ligatures: common-ligatures;\n}\n\n@import 'type';\n","// Typography\n// ==========\n\n\n$link: '&:link, &:visited';\n$focus: '&:hover, &:focus, &:active';\n\na {\n  #{$link} {\n    color: color(action);\n    text-decoration: none;\n  }\n\n  #{$focus} {\n    color: color(focus);\n    text-decoration: underline;\n  }\n}\n\n\n// Ampersand\n// ---------\n\n.amp { @extend %amp; }\n\n\n// Images\n// ------\n\nimg {\n  vertical-align: bottom;\n  width: 100%;\n}\n\n\n// Headers\n// -------\n\nh1 {\n  @include font-size(h2);\n\n  @include at(page) {\n    @include font-size(h1);\n  }\n\n  a {\n    #{$link} {\n      color: color(title);\n    }\n\n    #{$focus} {\n      color: color(focus);\n    }\n  }\n}\n\nh2 {\n  @include font-size(h3);\n  margin-bottom: size(gutter);\n\n  @include at(page) {\n    @include font-size(h2);\n  }\n}\n\nh3 {\n  margin-bottom: size(gutter);\n\n  @include at(page) {\n    @include font-size(h3);\n  }\n}\n\n\n// Blocks\n// ------\n\nh4,\nstrong {\n  font-weight: bold;\n}\n\nh5,\nh6,\nem,\nblockquote {\n  font-style: italic;\n}\n\np,\nul,\nol,\npre,\nblockquote {\n  margin-bottom: size(gutter);\n}\n\np:empty {\n  display: none;\n}\n\nul {\n  list-style-type: disc;\n}\n\nol {\n  list-style-type: decimal;\n}\n\nblockquote {\n  border-left: size(shim) solid color('gray');\n  padding: 0 size(gutter);\n\n  em {\n    font-style: normal;\n  }\n}\n\nul,\nol,\nblockquote {\n  margin-left: size(rhythm);\n\n  @include at(size(page, em) + size(spacer, em)) {\n    margin-left: 0;\n\n    ul,\n    ol {\n      @include font-size(small);\n      margin-bottom: size(shim);\n      margin-left: size(gutter);\n    }\n  }\n}\n\ncite,\n.citation {\n  @include before('—');\n  @include font-size('small');\n  display: block;\n  font-style: normal;\n\n  em {\n    font-style: italic;\n  }\n}\n\n\n\n// Figures\n// -------\n\nfigure {\n  margin-bottom: size(gutter);\n\n  > a,\n  > img,\n  > .video {\n    display: block;\n    outline: 1px solid color(text);\n    vertical-align: top;\n  }\n\n  .video {\n    height: 0;\n    padding-top: (1 / (16/9)) * 100%;\n    position: relative;\n\n    * {\n      @include stretch;\n      height: 100%;\n      width: 100%;\n    }\n  }\n}\n\nfigcaption {\n  @extend %boilerplate;\n  @include font-size(small);\n  background: color(brand (rgba: .125));\n  counter-increment: fig;\n  margin-top: size(shim);\n  padding: size(shim);\n\n  &:before {\n    @extend %body;\n    content: 'fig.' counter(fig);\n    font-style: italic;\n    margin-right: .4em;\n  }\n}\n\n\n// Code\n// ----\n\ntt,\ncode,\npre {\n  @extend %mono;\n  @include font-size(small);\n}\n\ntt,\ncode {\n  background: color(background (rgba: .75));\n  padding: 0 size(half-shim);\n}\n\npre {\n  border-left: 3px solid color(brand);\n  margin-left: - size(shim);\n  padding: size(shim);\n}\n","// Accoutrement Queries\n// ====================\n\n$queries: () !default;\n$query-context: ();\n\n\n// At [mixin]\n// ----------\n\n@mixin at(\n  $query,\n  $no-query: false\n) {\n  $_old-context: $query-context;\n  $_name: if(map-has-key($queries, $query), $query, null);\n  $query: _get-query($query);\n  $query: _parse-media-query($query);\n\n  @include _update-query-context($query, $_name);\n\n  @include _render-query($query, $no-query) {\n    @content;\n  }\n\n  @include _update-query-context($_old-context, $clean: true);\n}\n\n\n// At [function]\n// -------------\n\n@function at(\n  $property: false\n) {\n  @if $property {\n    @return map-get($query-context, $property);\n  } @else {\n    @return if(length($query-context) > 0, $query-context, false);\n  }\n}\n\n\n// Render Query [function]\n// -----------------------\n\n@function _render-query(\n  $query\n) {\n  $output: null;\n  @each $property, $value in $query {\n    $string: null;\n\n    @if $property == media {\n      $string: $value;\n    } @else {\n      $string: '(#{$property}: #{$value})';\n    }\n\n    $output: if($output, '#{$output} and #{$string}', $string);\n  }\n\n  @return $output;\n}\n\n\n// Render Query [mixin]\n// --------------------\n\n@mixin _render-query(\n  $query,\n  $no-query: false\n) {\n  @if $no-query and type-of($no-query) != string {\n    @content;\n  } @else {\n    @media #{_render-query($query)} {\n      @content;\n    }\n\n    @if type-of($no-query) == string {\n      #{$no-query} & {\n        @content;\n      }\n    }\n  }\n}\n\n\n// Update Query Context\n// --------------------\n\n@mixin _update-query-context(\n  $query,\n  $name: null,\n  $clean: false\n) {\n  $query: if($name, map-merge((name: $name), $query), $query);\n\n  @if $clean {\n    $query-context: $query !global;\n  } @else {\n    $query-context: map-merge($query-context, $query) !global;\n  }\n}\n\n\n// Get Query\n// ---------\n\n@function _get-query(\n  $name\n) {\n  @if map-has-key($queries, $name) {\n    $name: map-get($queries, $name);\n    $name: _get-query($name);\n  }\n\n  @return $name;\n}\n\n\n// Parse Media\n// -----------\n\n@function _parse-media-query(\n  $query\n) {\n  $_mq: null;\n  @if type-of($query) == map {\n    $_mq: $query;\n  } @else if type-of($query) == number {\n    $_mq: (min-width: $query);\n  } @else if type-of($query) == list and length($query) == 2 {\n    $_one: nth($query, 1);\n    $_two: nth($query, 2);\n\n    @if type-of($_one) == number {\n      @if $_one > $_two {\n        $_mq: (\n          min-width: $_two,\n          max-width: $_one,\n        );\n      } @else {\n        $_mq: (\n          min-width: $_one,\n          max-width: $_two,\n        );\n      }\n    } @else {\n      $_mq: (nth($query, 1): nth($query, 2));\n    }\n  } @else {\n    $_mq: (media: '#{$query}');\n  }\n\n  @return $_mq;\n}\n","// Pseudo Elements\n// ===============\n\n\n// Before\n// ------\n@mixin before(\n  $content\n) {\n  &:before {\n    content: $content;\n    @content;\n  }\n}\n\n\n// After\n// -----\n@mixin after(\n  $content\n) {\n  &:after {\n    content: $content;\n    @content;\n  }\n}\n\n\n// Wrap Content\n// ------------\n@mixin wrap-content(\n  $content: \"“\" \"”\"\n) {\n  $_before: nth($content, 1);\n\n  &:before, &:after {\n    content: $_before;\n    @content;\n  }\n\n  @if length($content) > 1 {\n    &:after { content: nth($content, 2); }\n  }\n}\n","// Layout Helpers\n// ==============\n\n// Clearfix\n@mixin micro-clearfix {\n  &:after {\n    clear: both;\n    content: ' ';\n    display: block;\n  }\n}\n\n\n// Box Sizing\n@mixin global-box-sizing(\n  $box: border-box,\n  $inherit: false\n) {\n  @if $inherit {\n    @at-root {\n      html {\n        box-sizing: $box;\n      }\n\n      *,\n      *:before,\n      *:after {\n        box-sizing: inherit;\n      }\n    }\n  } @else {\n    *,\n    *:before,\n    *:after {\n      box-sizing: $box;\n    }\n  }\n}\n\n\n// Reset the box model measurements.\n// @see `compass/utilities/reset`\n@mixin reset-box-model {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n\n// stretch element height to specified top and bottom position\n// @see `compass/layout/stretching'\n@mixin stretch-y($offset-top:0, $offset-bottom:0) {\n  @include stretch($offset-top, false, $offset-bottom, false);\n}\n\n\n// stretch element width to specified left and right position\n// @see `compass/layout/stretching'\n@mixin stretch-x($offset-left:0, $offset-right:0) {\n  @include stretch(false, $offset-right, false, $offset-left);\n}\n\n\n// shorthand to stretch element height and width\n// @see `compass/layout/stretching'\n@mixin stretch($offset-top:0, $offset-right:0, $offset-bottom:0, $offset-left:0) {\n  position: absolute;\n  @if $offset-top { top: $offset-top; }\n  @if $offset-bottom { bottom: $offset-bottom; }\n  @if $offset-left { left: $offset-left; }\n  @if $offset-right { right: $offset-right; }\n}\n","// Layout\n// ======\n\n%spacer {\n  @include after('— & —') {\n    @extend %amp;\n    color: color(brand (rgba: .5));\n    display: block;\n    margin-top: size(spacer);\n    text-align: center;\n  }\n}\n\n.container {\n  margin: 0 auto;\n  max-width: size(page);\n  padding: 0 size(gutter);\n}\n","// Banner\n// ======\n\n[role=\"banner\"] {\n  padding-top: size(half-shim);\n  text-align: center;\n  text-transform: lowercase;\n\n  .brand {\n    @include font-size(normal);\n    display: inline-block;\n  }\n\n  a {\n    #{$link} {\n      display: inline-block;\n    }\n  }\n\n  .tagline {\n    @include before(' / ');\n    @include font-size(small);\n    color: color('gray');\n    font-style: italic;\n  }\n}\n","// Navigation\n// ==========\n\n$nav: who what why press;\n\n\n[role=\"navigation\"] {\n  @extend %boilerplate;\n  @include font-size(small);\n  padding-bottom: size(half-shim);\n  text-align: center;\n\n  a {\n    #{$link} {\n      color: color(title);\n      display: inline-block;\n      padding: 0 size(half-shim);\n\n      @include before('+') {\n        display: inline-block;\n        width: .5em;\n      }\n    }\n\n    #{$focus} {\n      @include before('/');\n      color: color(focus);\n    }\n\n    @each $slug in $nav {\n      .#{$slug} &[href*=\"#{$slug}\"] {\n        @include before('/');\n        color: color(focus);\n      }\n    }\n  }\n}\n\n\n// Breakpoint\n// ----------\n\n@include at(page) {\n  [role=\"banner\"],\n  [role=\"navigation\"] {\n    float: left;\n    padding: 0 size(half-shim);\n    text-align: left;\n    width: 50%;\n\n    a {\n      #{$link} {\n        padding: size(shim);\n      }\n    }\n  }\n\n  [role=\"navigation\"] {\n    float: right;\n    text-align: right;\n  }\n}\n","// Main\n// ====\n\n[role=\"main\"] {\n  border: 2px solid color(title);\n  border-width: 2px 0;\n  clear: both;\n  counter-reset: fig;\n  padding: size(spacer) 0;\n\n  [data-bg] & {\n    background-color: color(background (rgba: .98));\n    border: 0;\n    box-shadow: 0 0 .125em color(brand);\n  }\n}\n","// Pagination\n// ==========\n\n.pagination {\n  font-style: italic;\n  text-align: center;\n\n  .location {\n    @include wrap-content(' • ');\n    margin: 0 1em;\n  }\n\n  .now,\n  .context {\n    display: inline-block;\n    font-style: normal;\n    vertical-align: middle;\n  }\n\n  .now {\n    @include font-size(8);\n  }\n\n  .context {\n    @include font-size(5);\n    padding: 0 .125em;\n  }\n\n  .prev {\n    @include before('« ');\n  }\n\n  .next {\n    @include after(' »');\n  }\n\n  .disabled {\n    color: color('gray');\n  }\n}\n","// Contentinfo\n// ===========\n\n[role=\"contentinfo\"] {\n  @extend %boilerplate;\n  @include font-size(small);\n  clear: both;\n  color: color('gray');\n  padding: size(rhythm) 0;\n  text-transform: uppercase;\n}\n\n.social {\n  @include font-size(smaller);\n  text-align: center;\n\n  li {\n    display: inline-block;\n    margin: 0 size(half-shim);\n  }\n}\n\n.colophon {\n  margin: 0 auto;\n  max-width: size(page);\n  padding: 0 size(gutter);\n}\n","// ----------------------------------------------------------------------------\n// Posts\n\n.post {\n  @extend %spacer;\n  margin-bottom: size(spacer);\n\n  &:last-of-type:after {\n    display: none;\n  }\n}\n\n.byline {\n  @include font-size(small);\n  color: color('gray');\n  font-style: italic;\n}\n\n.gallery-body {\n  display: flex;\n  flex-wrap: wrap;\n\n  img {\n    width: 100%;\n    outline: 1px solid color(text);\n  }\n\n  .gallery-item {\n    flex: 1 1 48%;\n    margin: size(half-shim) 1%;\n  }\n\n  .full {\n    flex: 1 1 98%;\n  }\n\n  .video {\n    padding-top: 1/(16/9) * 48%;\n\n    &.full {\n      padding-top: 1/(16/9) * 98%;\n    }\n  }\n}\n\n.readmore {\n  @include after('»');\n  font-style: italic;\n}\n\n.section {\n  clear: both;\n}\n","// Color Toolkit\n// =============\n\n\n$colors: (\n  dark: #000,\n  light: #fff,\n\n  contrast-dark: dark,\n  contrast-light: light,\n) !default;\n\n\n// Colors\n// ------\n@mixin colors(\n  $map\n) {\n  $colors: map-merge($colors, $map) !global;\n}\n\n\n// Color\n// -----\n@function color($color) {\n  // Parse arguments\n  $color: map-get($colors, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n\n  // Recursive check\n  $color: if(map-has-key($colors, $base), color($base), $base);\n\n  // Adjustments\n  @each $function, $value in $adjust {\n    @if function-exists($function) {\n      $color: call($function, $color, $value);\n    } @else {\n      @warn \"#{$function} is not a valid color function.\";\n    }\n  }\n\n  @return $color;\n}\n\n\n// Tint\n// ----\n@function tint(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#fff, $color, $percentage);\n}\n\n\n// Shade\n// -----\n@function shade(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#000, $color, $percentage);\n}\n\n\n// Brightness\n// ----------\n@function brightness(\n  $color\n) {\n  $color: color($color);\n\n  $_red: red($color) * .299;\n  $_green: green($color) * .587;\n  $_blue: blue($color) * .114;\n\n  @return ($_red + $_green + $_blue) / 255 * 100%;\n}\n\n\n// Contrast\n// --------\n@function contrast(\n  $color,\n  $dark: contrast-dark,\n  $light: contrast-light\n) {\n  $color: color($color);\n  $dark: color($dark);\n  $light: color($light);\n\n  @if not(type-of($dark) == color) {\n    $dark: #000;\n  }\n\n  @if not(type-of($light) == color) {\n    $light: #fff;\n  }\n\n  $_color-brightness: brightness($color);\n  $_dark-text-brightness: brightness($dark);\n  $_light-text-brightness: brightness($light);\n\n  $_light-contrast: abs($_color-brightness - $_light-text-brightness);\n  $_dark-contrast: abs($_color-brightness - $_dark-text-brightness);\n\n  @return if($_light-contrast > $_dark-contrast, $light, $dark);\n}\n\n\n// Contrasted\n// ----------\n@mixin contrasted(\n  $background,\n  $dark: contrast-dark,\n  $light: contrast-light\n) {\n  $background: color($background);\n\n  background-color: $background;\n  color: contrast($background, $dark, $light);\n}\n","// Bio\n// ===\n\n@include at(35em) {\n  .headshot {\n    float: left;\n    margin-right: size(gutter);\n    width: 25%;\n\n    ~ p {\n      margin-left: size(gutter);\n      padding-left: 25%;\n    }\n  }\n}\n","// Calendar\n// --------\n\n$date-span: size(rhythm)*5;\n\n.section--cal {\n  @include micro-clearfix;\n  margin-bottom: size(rhythm);\n}\n\n.h-event {\n  margin-bottom: size(shim);\n}\n\n.dt-start {\n  @include font-size(small);\n  font-style: italic;\n\n  @include at(page) {\n    text-align: right;\n    float: left;\n    padding-right: size(shim);\n    width: $date-span;\n  }\n}\n\n.event-details {\n  @include at(page) {\n    padding-left: $date-span + size(shim);\n  }\n}\n\n.p-name {\n  margin-bottom: 0;\n}\n\n.p-summary,\n.p-location {\n  @include font-size(small);\n  margin-bottom: 0;\n}\n\n.p-category {\n  @extend %boilerplate;\n  @include before(' | ');\n  @include font-size(smaller);\n  color: color(light);\n  font-style: normal;\n  text-transform: uppercase;\n}\n\n.history-link {\n  float: right;\n  font-style: italic;\n}\n","// ----------------------------------------------------------------------------\n// List Pages\n\n.blog-archive,\n.tag-archive {\n  margin-top: size(rhythm);\n}\n\n\n// ----------------------------------------------------------------------------\n// Blog Archive\n\n.blog-archive {\n  li {\n    list-style-type: none;\n\n    ul {\n      margin-left: 0;\n    }\n\n    li {\n      list-style-type: disc;\n    }\n  }\n}\n\n\n// ----------------------------------------------------------------------------\n// Tag List\n\n.tag-list {\n  margin-top: size(rhythm);\n  display: block;\n\n  li {\n    @include after(', ');\n    display: inline;\n\n    &:last-child:after {\n      display: none;\n    }\n  }\n}\n","// scss-lint:disable ColorKeyword\n\n// ----------------------------------------------------------------------------\n// 12.07.20 - Sass Striped Background\n\n$mycolors: red orange yellow green blue indigo violet;\n\n// Returns a striped gradient for use anywhere gradients are accepted.\n// - $position: the starting position or angle of the gradient.\n// - $colors: a list of all the colors to be used.\n@function rainbow($position, $colors) {\n  $gradient: ();\n  $width: 100% / length($colors);\n\n  @for $i from 1 through length($colors) {\n    $pop: nth($colors, $i);\n    $new: $pop ($width * ($i - 1)), $pop ($width * $i);\n    $gradient: join($gradient, $new, comma);\n  }\n\n  @return linear-gradient($position, $gradient);\n}\n\n.demo-rainbow {\n  background-image: rainbow(to right, $mycolors);\n  height: size(rhythm)*4;\n  margin-bottom: size(rhythm);\n}\n","// scss-lint:disable Comment\n\n// Pygments\n// ========\n\n.c { color: color(light); } /* Comment */\n.err { color: color(light); } /* Error */\n.g { color: color('gray'); } /* Generic */\n.k { color: color(text); } /* Keyword */\n.l { color: color('gray'); } /* Literal */\n.n { color: color('gray'); } /* Name */\n.o { color: color(text); } /* Operator */\n.x { color: color(accent); } /* Other */\n.p { color: color(text); } /* Punctuation */\n.cm { color: color(light); } /* Comment.Multiline */\n.cp { color: color(text); } /* Comment.Preproc */\n.c1 { color: color(light); } /* Comment.Single */\n.cs { color: color(text); } /* Comment.Special */\n.gd { color: color(brand); } /* Generic.Deleted */\n.ge { color: color(light); font-style: italic; } /* Generic.Emph */\n.gr { color: color(accent); } /* Generic.Error */\n.gh { color: color(accent); } /* Generic.Heading */\n.gi { color: color(text); } /* Generic.Inserted */\n.go { color: color(light); } /* Generic.Output */\n.gp { color: color(light); } /* Generic.Prompt */\n.gs { color: color(light); font-weight: bold; } /* Generic.Strong */\n.gu { color: color(accent); } /* Generic.Subheading */\n.gt { color: color(light); } /* Generic.Traceback */\n.kc { color: color(accent); } /* Keyword.Constant */\n.kd { color: color(accent); } /* Keyword.Declaration */\n.kn { color: color(text); } /* Keyword.Namespace */\n.kp { color: color(text); } /* Keyword.Pseudo */\n.kr { color: color(accent); } /* Keyword.Reserved */\n.kt { color: color(accent); } /* Keyword.Type */\n.ld { color: color(light); } /* Literal.Date */\n.m { color: color(brand); } /* Literal.Number */\n.s { color: color(brand); } /* Literal.String */\n.na { color: color('red' (darken: 15%)); } /* Name.Attribute */\n.nb { color: color(accent); } /* Name.Builtin */\n.nc { color: color(brand); } /* Name.Class */\n.no { color: color(accent); } /* Name.Constant */\n.nd { color: color(accent); } /* Name.Decorator */\n.ni { color: color(accent); } /* Name.Entity */\n.ne { color: color(accent); } /* Name.Exception */\n.nf { color: color(accent); } /* Name.Function */\n.nl { color: color(light); } /* Name.Label */\n.nn { color: color(brand); } /* Name.Namespace */\n.nx { color: color(light); } /* Name.Other */\n.py { color: color(light); } /* Name.Property */\n.nt { color: color('blue'  (darken: 25%)); } /* Name.Tag */\n.nv { color: color('blue'  (darken: 25%)); } /* Name.Variable */\n.ow { color: color(text); } /* Operator.Word */\n.w { color: color(light); } /* Text.Whitespace */\n.mf { color: color(brand); } /* Literal.Number.Float */\n.mh { color: color(brand); } /* Literal.Number.Hex */\n.mi { color: color(brand); } /* Literal.Number.Integer */\n.mo { color: color(brand); } /* Literal.Number.Oct */\n.sb { color: color(light); } /* Literal.String.Backtick */\n.sc { color: color(brand); } /* Literal.String.Char */\n.sd { color: color(light); } /* Literal.String.Doc */\n.s2 { color: color(brand); } /* Literal.String.Double */\n.se { color: color(accent); } /* Literal.String.Escape */\n.sh { color: color(light); } /* Literal.String.Heredoc */\n.si { color: color(brand); } /* Literal.String.Interpol */\n.sx { color: color(brand); } /* Literal.String.Other */\n.sr { color: color(accent); } /* Literal.String.Regex */\n.s1 { color: color(brand); } /* Literal.String.Single */\n.ss { color: color(brand); } /* Literal.String.Symbol */\n.bp { color: color(accent); } /* Name.Builtin.Pseudo */\n.vc { color: color(accent); } /* Name.Variable.Class */\n.vg { color: color(accent); } /* Name.Variable.Global */\n.vi { color: color(accent); } /* Name.Variable.Instance */\n.il { color: color(brand); } /* Literal.Number.Integer.Long */\n"],"sourceRoot":"/source/"}